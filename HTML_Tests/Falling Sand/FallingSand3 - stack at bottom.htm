<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>Falling Sand</title>
</head>

<body>
	<h1>Falling Sand</h1>
	<canvas id="canvas" width="800" height="320" style="border: 1px solid black"></canvas>
	<button id="Move">Move sand</button>

<script>
	
	// Need to make sand fall under control
	
	// Set up the canvas for drawing
	var canvas, context;
  	canvas = document.getElementById("canvas");
  	context = canvas.getContext("2d");
	// Constants
	const CANVAS_WIDTH = 800;
	const SAND_MAX = 200;
	const HEIGHT_MAX = 300;
	const SAND_SIZE = 6
	
	// Sand particle image
	var SandGreenImage = new Image;
	SandGreenImage.src = "SandGreen.png";
	
	// Array to track all the sand particles
	var sandArray = [];
	
	// Run to track that sand is still falling.
	var run = true;

	// Set up the move button
	const btnMove = document.getElementById("Move");
	btnMove.addEventListener("click", _SandFall);
	
	// Class Sand to track each sand particle
	class ClassSand{
		constructor(X,Y){
			this.velY = -0.025;
			this.X = X;
			this.Y = Y;
			this.image = SandGreenImage;
			this.maxheight = HEIGHT_MAX;
		}
		move(){
			this.Y = this.Y - this.velY;
			if (this.Y > this.maxheight){
				this.velY = 0;
			}
		}
	}
	
	window.onload = function() {
		console.log("Onload function");
		_SetUp();

		for (let i = 0; i < HEIGHT_MAX; i++){
 			console.log(`Running for ${i} seconds`);
			setInterval(_SandFall, 2000);
		}
	}

	
	
	function _SetUp(){
		console.log("Start");
		// Create all of the sand particles, up to SAND_MAX
		for (let i = 0; i < SAND_MAX; i++){
			// scatter the sand randomly across the width of the screen
			sandArray[i] = new ClassSand(SAND_SIZE*Math.floor(Math.random()*100) + 100,i/10)
			
			//console.log("i: "+i+" X: "+sandArray[i].X);
			// Go through the existing sandArray and if there is a lower particle, adjust the height.
			for (let l = 0; l < i-1; l++){
				// if two particles have the same X coordinate move the 2nd particle up and adjust how far it will fall.
				if (sandArray[i].X === sandArray[l].X) {
					sandArray[i].Y += SAND_SIZE;
					sandArray[i].maxheight -= SAND_SIZE;
				}
			}
			_SandFall();
		}
	}
	function _SandCheck(x){
		for(let i = 0; i < x; i++){
			if (sandArray[i].x === sandArray[x].x){
				if (sandArray[i].y < sandArray[x].y - SAND_SIZE){
					return false;
				} else {
					return true;
				}
			}
		}
	}
	
	function _SandFall(){
		// Move each piece of sand down by its velocity
		console.log("SandFall - move all sand down");
		for ( let k = 0; k < sandArray.length; k++){
			console.log("SandFall, X: "+sandArray[k].X+" Y: "+sandArray[k].Y);
			if (_SandCheck(k)){
				sandArray[k].move();
				_DrawImage();
			}
		}
		_DrawImage();
	}
	

	function _DrawImage(){
		// Redraw the screen
		console.log("Draw");
		context.fillStyle = 'lightBlue';
		context.fillRect(0,0, canvas.width, canvas.height);
		for (let m=0; m < sandArray.length - 1; m++){
  			context.drawImage(SandGreenImage, sandArray[m].X, sandArray[m].Y);
		}
	}
	
</script>
</body>
</html>
