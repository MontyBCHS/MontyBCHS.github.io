<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>Hydrocabon Creator</title>
</head>
<body>
<h1>Hydrocarbon Diagrams</h1>
<canvas id="canvas" width="800" height="500" style="border: 1px solid black"></canvas>
	<script>
	// right carbon to hydrogen bond needs work
	// double bonds/ triple hydrogen up down needs work
	// ***********************************************
	// Set up Canvas
	var canvas, context;
	canvas = document.getElementById("canvas");
	context = canvas.getContext("2d");
	// Declare Images
	var Background = new Image();
	Background.src = 'Background-500-800.png';
	var BondDouble = new Image();
	BondDouble.src = 'BondDouble.png';
	var BondSingle = new Image();
	BondSingle.src = 'BondSingle.png';
	var BondTriple = new Image();
	BondTriple.src = 'BondTriple.png';
	var BromineImage = new Image();
	BromineImage.src = 'Bromine.png';
	var CarbonImage = new Image();
	CarbonImage.src = 'Carbon.png';
	var ChlorineImage = new Image();
	ChlorineImage.src = 'Chlorine.png';
	var FlourineImage = new Image();
	FlourineImage.src = 'Flourine.png';
	var HydrogenImage = new Image();
	HydrogenImage.src = 'Hydrogen.png';
	var IodineImage = new Image();
	IodineImage.src = 'Iodine.png';	
		

	// Declare Variables	
	var CarbonBonds=[1,1,1,1,1,1,1,1,1,1];
	var CarbonLength = 5;
	var CarbonMax = 6;
	var DownBonds=[1,1,2,3,4,5,1,1,1,1];
	var GraphicIndent = 100;
	var GraphicMiddle = 250;
	var UpBonds=[1,2,3,4,5,1,1,1,1,1];

	// ***********************************************
	window.onload = function() {
		canvas = document.getElementById("canvas");
		context = canvas.getContext("2d");
		_DrawImage();
		_MouseEvents();
	}
	
	// *******************************************
	function _MouseEvents() {
		canvas.onmousedown = function(e) {
			var mouseX = e.pageX - this.offsetLeft;
			var mouseY = e.pageY - this.offsetTop;
			
			console.log('x, y: ' + mouseX + ', '+ mouseY);
			// If click on left carbon then change the length of the chain
			// If to check if the mouse click was on the carbon Y-coord
			if (mouseY >= (GraphicMiddle-HydrogenImage.height/2) && mouseY <= (GraphicMiddle+HydrogenImage.height/2)) {
				// If to determine number of carbon clicked, count left to right, if first carbon increase the chain length
				if (mouseX >= (GraphicIndent) && mouseX <= (GraphicIndent + CarbonImage.width)) {
					// If the left carbon is clicked increase the number of carbons in the main chain
					CarbonLength++;
					if(CarbonLength>CarbonMax){
						CarbonLength=1;
					}	
				}

				// If to determine which carbon was clicked
				var CurrentCarbon = (Math.floor((mouseX-GraphicIndent)/CarbonImage.width+1));
				if(CurrentCarbon <= CarbonLength && CurrentCarbon > 1){
					console.log("C = " + CurrentCarbon);
					// change the bond to the left +1
					if (CarbonBonds[CurrentCarbon -2] == 4)
					CarbonBonds[CurrentCarbon-1]++;
					// if bonds > 4 cycle back to single
					if (CarbonBonds[CurrentCarbon-1]>4){
						CarbonBonds[CurrentCarbon-1] = 1;
					}
					//*****************************************
					// change hydrogen bonds
					
					// If bond is >4, change to 1
					if (CarbonBonds[Math.floor((mouseX-GraphicIndent)/CarbonImage.width+1)-1] > 4){
						CarbonBonds[Math.floor((mouseX-GraphicIndent)/CarbonImage.width+1)-1] = 1;	
					}
				}
			}
			// Change top hydrogen to different atoms
			if ((mouseY >= GraphicMiddle - BondSingle.height - HydrogenImage.height/2) && (mouseY <= GraphicMiddle - BondSingle.height + HydrogenImage.height/2)) {
				
				var CurrentHydrogen = (Math.floor((mouseX-GraphicIndent)/HydrogenImage.width));
				if(CurrentHydrogen <= CarbonLength){
					console.log('click top hydrogen ' + CurrentHydrogen + " VAlue: "+UpBonds[CurrentHydrogen]);
					UpBonds[CurrentHydrogen]++;
					if (UpBonds[CurrentHydrogen] >5 ){
						UpBonds[CurrentHydrogen]=1;
					}
				}
			}
			// Change bottom hydrogen to different atoms
			if ((mouseY >= GraphicMiddle + BondSingle.height - HydrogenImage.height/2) && (mouseY <= GraphicMiddle + BondSingle.height + HydrogenImage.height/2)) {
				
				var CurrentHydrogen = (Math.floor((mouseX-GraphicIndent)/HydrogenImage.width));
				if(CurrentHydrogen <= CarbonLength){
					console.log('click bottom hydrogen ' + CurrentHydrogen + " VAlue: "+DownBonds[CurrentHydrogen]);
					DownBonds[CurrentHydrogen]++;
					if (DownBonds[CurrentHydrogen] >5 ){
						DownBonds[CurrentHydrogen]=1;
					}
				}
			}
		_DrawImage();
		}
	}
		
	// *******************************************
	function _DrawVertBond(Bond_X, Bond_Y, Image){
		// Rotate the single bond and draw it vertically
		context.save();
		context.translate(Bond_X, Bond_Y);
		context.rotate(90 * Math.PI / 180);
		context.drawImage(Image, 0, 0);
		context.restore;
		context.setTransform(1, 0, 0, 1, 0, 0);
	}
	// *******************************************		
	//function _FindAtomBranch(var i);
		
		
	// *******************************************	
	function _DrawImage() {
		// Draw background
		context.drawImage(Background,0,0);
		// Draw main chain bonds
		for (var i=0; i < CarbonLength; i++){
			if (CarbonBonds[i] == 1){
				// If single bond
				context.drawImage(BondSingle, i*BondSingle.width+BondSingle.width/2, GraphicMiddle-BondSingle.height/2);
			} else if (CarbonBonds[i] == 2 | CarbonBonds[i] == 3){
				// If double bond, 2 no down hydrogen, 3 no up hydrogen
				context.drawImage(BondDouble, i*BondDouble.width+BondDouble.width/2, GraphicMiddle-BondDouble.height/2);
			} else if (CarbonBonds[i] == 4){
				// If triple bond draw triple bond
				UpBonds[i]=0;
				UpBonds[i-1]=0;
				DownBonds[i]=0;
				DownBonds[i-1]=0;
				context.drawImage(BondTriple, i*BondTriple.width+BondTriple.width/2, GraphicMiddle-BondTriple.height/2);
			}
		}
		// Draw the left most bond for hydrgoen
		context.drawImage(BondSingle, (CarbonLength)*BondSingle.width+BondSingle.width/2, GraphicMiddle-BondSingle.height/2);
		
		// Draw hydrogens
		for (var i=0; i < CarbonLength+2; i++){
			// draw the first (left) and last (right)
				context.drawImage(HydrogenImage, i*HydrogenImage.width, GraphicMiddle-HydrogenImage.height/2);
		}

		// Draw up and down hydrogens
		for (var i=0; i < CarbonLength; i++){
			// Draw up bonds
			// if the carbonbond = 1 single bond; carbonbond = 2 double bond  draw the up bond and then draw the hydrogen
			if (CarbonBonds[i]==1 | CarbonBonds[i]==2 && (CarbonBonds[i-1]!=2 && CarbonBonds[i-1]!=3)){
				_DrawVertBond(i*CarbonImage.width+HydrogenImage.width*2, GraphicMiddle-BondSingle.height,BondSingle);
				// Draw up hydrogens
				var TempImage = new Image();
				switch (UpBonds[i]){
					case(1):
						TempImage = HydrogenImage;
					break;
					case(2):
						TempImage = BromineImage;
					break;
					case(3):
						TempImage = ChlorineImage;
					break;
					case(4):
						TempImage = FlourineImage;
					break;
					case(5):
						TempImage = IodineImage;
					break;			
				}
				console.log('Draw: '+UpBonds[i]);
				context.drawImage(TempImage, i*HydrogenImage.width + GraphicIndent, GraphicMiddle-BondSingle.height-HydrogenImage.height/2);
			}
			// Draw down bonds 
			if(CarbonBonds[i]==1 | CarbonBonds[i]==3){
				_DrawVertBond(i*CarbonImage.width + HydrogenImage.width + GraphicIndent,GraphicMiddle, BondSingle);
				// Draw down hydrogens
				// Draw up hydrogens
				var TempImage = new Image();
				switch (DownBonds[i]){
					case(1):
						TempImage = HydrogenImage;
					break;
					case(2):
						TempImage = BromineImage;
					break;
					case(3):
						TempImage = ChlorineImage;
					break;
					case(4):
						TempImage = FlourineImage;
					break;
					case(5):
						TempImage = IodineImage;
					break;			
				}
				context.drawImage(TempImage, i*HydrogenImage.width + GraphicIndent, GraphicMiddle+BondSingle.height/2);
				
				
				
			}

			// Draw main carbons
			context.drawImage(CarbonImage, i*CarbonImage.width+GraphicIndent, GraphicMiddle-CarbonImage.height/2);
			// console.log("Carbon "+i);
		}
	}
	</script>
</body>
</html>
